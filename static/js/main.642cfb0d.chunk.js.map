{"version":3,"sources":["App.js","store/reducer.js","serviceWorker.js","index.js"],"names":["App","_this","this","react_default","a","createElement","className","href","id","type","onChange","e","props","imageChange","required","multiple","img","map","data","index","key","class","src","imgs","width","height","style","marginRight","concat","value","name","disabled","iDisabled","nameChange","target","marginLeft","Select2_default","tags","ref","onSelect","optionChange","refs","el","val","options","placeholder","marginTop","onClick","saveChange","sDisabled","editChange","eDisabled","Component","connect","state","Object","toConsumableArray","dispatch","i","tagsdata","initialState","counter","reducer","arguments","length","undefined","action","console","log","files","singleImg","URL","createObjectURL","push","objectSpread","namec","temp","index2","tagd","temp2","index3","temp3","index4","temp4","Boolean","window","location","hostname","match","store","createStore","composeWithDevTools","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.642cfb0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Select2 from 'react-select2-wrapper';\nimport './App.css';\nimport 'react-select2-wrapper/css/select2.css';\n\nclass App extends Component {\n\n\n\n  render() {\n    \n    return (\n      <div >\n        <nav className=\"navbar navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"http://www.codingmart.com\">\n            CodingMart Technologies\n        </a>\n        </nav>\n        <div className=\"container\">\n          <div className=\"margintr\">\n            <h4>Multiple Photo Upload</h4>\n            <label >upload photo</label>\n            <input id=\"file\" type=\"file\" onChange={(e) => (this.props.imageChange(e))} required multiple />\n            {\n              this.props.img.map((data, index) => (\n              <div key={index} class=\"ui card\">\n                <div class=\"image\">\n                  <img src={data.imgs}\n                    //alt={`image${index}`}\n                    width=\"100px\"\n                    height=\"100px\"\n                  />\n                </div>\n                <div class=\"content\"><span style={{ marginRight: `10${'px'}` }}>Name</span>\n                  <input type=\"text\"\n                    value={data.name}\n                    index={index}\n                    name=\"name\"\n                    disabled={data.iDisabled}\n                    onChange={(e) =>(this.props.nameChange(e.target.value,index))}\n                  />\n                </div>\n                <div class=\"description\">\n                  <span style={{ marginRight: `20${'px'}`, marginLeft: `15${'px'}` }}>Tags</span>\n                  <Select2\n                    multiple\n                    disabled={data.iDisabled}\n                    value={data.tags}\n                    ref=\"tags\"\n                    style={{ width: `175${'px'}` }}\n                    onSelect={(e) =>{this.props.optionChange(this.refs.tags.el.val(),index)}}\n                    data={['bug', 'feature', 'documents', 'discussion']}\n                    options={\n                      {\n                        placeholder: 'search by tags',\n                        tags: \"true\"\n                      }\n                    }\n                  />\n                </div>\n                <div class=\"extra content\" style={{ marginTop: `10${'px'}` }}>\n                  <input\n                    type=\"button\"\n                    value=\"save\"\n                    onClick={() =>{this.props.saveChange(index)}}\n                    disabled={data.sDisabled}\n                    class=\"btn btn-primary\"\n                  />\n                  {\" \"}\n                  <input\n                    type=\"button\"\n                    value=\"edit\"\n                    onClick={() =>{this.props.editChange(index)}}\n                    disabled={data.eDisabled}\n                    class=\"btn btn-danger\"\n                  />\n                </div>\n              </div>\n              \n            ))}\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n \n  return {\n    img: [...state.img]\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n\n  return {\n    imageChange: (e) => dispatch({ type: 'IMAGECHANGE', value: e }),\n    nameChange:(value,index) => dispatch ({type : 'NAMECHANGE',i:index,val:value}),\n    optionChange:(data,index) => dispatch ({type : 'OPTIONCHANGE',i:index,tagsdata:data}),\n    saveChange: (index) =>dispatch ({type:'SAVECHANGE',i:index}),\n    editChange: (index) =>dispatch ({type:'EDITCHANGE',i:index})\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const initialState = {\n    img:[],counter:0\n}\n\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case 'IMAGECHANGE':\n        console.log('reducer')\n            const { target } = action.value;\n            const {img} = state; \n            for(let i=0;i<target.files.length;i++){\n                const singleImg={\n                    imgs:URL.createObjectURL(target.files[i]),\n                    name:target.files[i].name,\n                    tags:'',\n                    sDisabled:true,\n                    iDisabled:true,\n                    eDisabled:false\n                }\n                img.push(singleImg);\n            } \n            state = {\n                ...state,\n                img \n            }\n        break;\n        case 'NAMECHANGE':\n        const namec = action.val\n        const index =action.i\n        let temp = {...state}\n        temp.img[index].name = namec\n        \n        \n        return {...state,\n            img: [...temp.img]\n        }\n        break;\n        case 'OPTIONCHANGE':\n            \n            const index2 =action.i\n            const tagd=action.tagsdata\n            let temp2 = {...state}\n            temp2.img[index2].tags = tagd\n            return {...state,\n                img: [...temp2.img]\n            }\n        break;\n        case 'SAVECHANGE':\n        const index3 =action.i\n        let temp3 = {...state}\n        temp3.img[index3].sDisabled = false;\n        temp3.img[index3].iDisabled=true;\n        temp3.img[index3].eDisabled=false;\n        return {...state,\n            img: [...temp3.img]\n        }\n        break;\n        case 'EDITCHANGE':\n        const index4 =action.i\n        let temp4 = {...state}\n        temp4.img[index4].sDisabled = false;\n        temp4.img[index4].iDisabled=false;\n        temp4.img[index4].eDisabled=true;\n        return {...state,\n            img: [...temp4.img]\n        }\n        break;\n        default:\n        break;\n    }\n    return state;\n}\n\n\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport {createStore} from 'redux';\nimport reducer from './store/reducer';\nimport {Provider} from 'react-redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(reducer,composeWithDevTools(\n    \n));\n\n\nReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}